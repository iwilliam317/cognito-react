{"version":3,"sources":["App.js","index.js"],"names":["App","state","username","password","bucket","user","files","apiGatewayResponse","error","message","code","name","isAuthenticated","handleChange","event","setState","target","id","value","clearState","signIn","a","preventDefault","Auth","currentCredentials","accessKeyId","secretAccessKey","sessionToken","attributes","signOut","listObjects","s3","aws","S3","Bucket","params","promise","data","Contents","checkCurrentSession","currentSession","session","currentUserInfo","idToken","getIdToken","getJwtToken","checkApiCognitoAuthorizer","config","api","key","KEY","url","URL","headers","axios","post","response","JSON","stringify","console","log","this","className","onClick","onChange","placeholder","map","file","index","Key","onSubmit","type","Component","Amplify","configure","region","cognito","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","identityPoolId","IDENTITY_POOL_ID","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5b8c45a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Auth } from \"aws-amplify\";\nimport aws from 'aws-sdk'\nimport axios from 'axios'\nimport config from './config/aws-config.json'\n\nclass App extends Component {\n  state = {\n    username: '',\n    password: '',\n    bucket: '',\n    user: {},\n    files: [],\n    apiGatewayResponse: '',\n    error: {\n      message: null,\n      code: null,\n      name: null\n    },\n    isAuthenticated: false,\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.id]: event.target.value })\n  }\n\n  clearState = () => {\n    this.setState({\n      error: {\n        message: null,\n        code: null,\n        name: null\n      },\n      files: [],\n      apiGatewayResponse: ''\n    })\n  }\n\n  signIn = async event => {\n    event.preventDefault()\n    this.clearState()\n    try {\n      const { username, password } = this.state\n      const user = await Auth.signIn(username, password)\n      const { accessKeyId, secretAccessKey, sessionToken, ...rest } = await Auth.currentCredentials()\n\n      this.setState({ isAuthenticated: true, user: user.attributes, accessKeyId, secretAccessKey, sessionToken })\n\n    } catch (error) {\n      this.setState({ error })\n    }\n\n  }\n\n  signOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.setState({ isAuthenticated: false, user: {}, password: '' })\n    } catch (error) {\n      this.setState({ error })\n    }\n  }\n\n  listObjects = async event => {\n    event.preventDefault()\n    this.clearState()\n\n    const { accessKeyId, secretAccessKey, sessionToken } = this.state\n    const s3 = new aws.S3({ accessKeyId, sessionToken, secretAccessKey })\n    const { bucket: Bucket } = this.state\n    const params = {\n      Bucket\n    };\n\n    try {\n      const data = await s3.listObjects(params).promise()\n      const files = data.Contents\n      this.setState({ files })\n\n    } catch (error) {\n      this.setState({ error })\n    }\n  }\n\n  checkCurrentSession = async () => {\n\n    try {\n      const session = await Auth.currentSession()\n      if (session) {\n        const { accessKeyId, secretAccessKey, sessionToken } = await Auth.currentCredentials()\n        const user = await Auth.currentUserInfo()\n        const idToken = session.getIdToken().getJwtToken()\n        this.setState({ isAuthenticated: true, accessKeyId, secretAccessKey, sessionToken, user: user.attributes, username: user.username, idToken })\n      }\n\n    } catch (error) {\n      this.setState({ error })\n    }\n\n  }\n\n  checkApiCognitoAuthorizer = async event => {\n    event.preventDefault()\n    this.clearState()\n    try {\n      const { idToken } = this.state\n      const { KEY: key, URL: url } = config.api\n\n      if (idToken && key) {\n        const headers = { \"authorization\": idToken, \"x-api-key\": key }\n\n        // POST\n        const data = { \"message\": \"hello world\" }\n        const config = { headers }\n        const response = await axios.post(url, data, config)\n\n        // GET\n        // const params = { \"message\": \"hello world\" }\n        // const config = { headers, params }\n        // const response = await axios.get(url, config)\n\n        this.setState({ apiGatewayResponse: JSON.stringify(response.data) })\n\n      }\n    } catch (error) {\n      console.log(error)\n      this.setState({ error })\n    }\n  }\n  componentDidMount() {\n    console.log('step componentDidMount')\n    this.checkCurrentSession()\n  }\n\n  render() {\n    console.log('step render')\n    const { handleChange, signIn, listObjects, signOut, checkApiCognitoAuthorizer } = this\n    const { username, password, isAuthenticated, bucket, error, user, files, apiGatewayResponse } = this.state\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          {!isAuthenticated ?\n            (\n              <form onSubmit={signIn}>\n                <h1>Cognito - React </h1>\n                <div>\n\n                  <input id='username' onChange={handleChange} value={username} placeholder='type your email/username'></input>\n                </div>\n                <div>\n\n                  <input id='password' type='password' onChange={handleChange} value={password} placeholder='type your password'></input>\n                </div>\n                <button>Sign in</button>\n\n              </form>\n            ) :\n            (\n              <>\n                <h1>Hello <strong>{username}</strong></h1> <button onClick={signOut}>Sign Out</button>\n                <div id='div-s3'>\n                  <h3>S3</h3>\n                  <input id='bucket' value={bucket} onChange={handleChange} placeholder='Type the bucket name' />\n                  <button onClick={listObjects}>List Files</button>\n\n\n                  <div>\n                    <ul>\n                      {files.map((file, index) => (<li key={index}>{file.Key}</li>))}\n\n                    </ul>\n                  </div>\n                </div>\n                <div id='div-api-gateway'>\n                  <h3>Api Gateway</h3>\n                  <button onClick={checkApiCognitoAuthorizer}>Test Api Gateway</button>\n                  {apiGatewayResponse}\n                </div>\n              </>\n            )}\n          <div>\n            {error.message}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify'\nimport config from './config/aws-config.json'\n\nAmplify.configure({\n  region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID \n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}